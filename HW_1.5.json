{
	"info": {
		"_postman_id": "3469da4c-cb16-4b5a-ba34-23d96e594f21",
		"name": "HW_1.5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = Number(jsonData.age);\r",
							"var resp_name = jsonData.name;\r",
							"var resp_salary = jsonData.salary;\r",
							"\r",
							"pm.test(\"Test response\", function () {\r",
							"    pm.expect(resp_age).to.eql(29);\r",
							"    pm.expect(resp_name).to.eql(\"Olga\");\r",
							"     pm.expect(resp_salary).to.eql(1500);\r",
							"});\r",
							"\r",
							"//request\r",
							"var req_body = request.data;\r",
							"var req_name = req_body.name;\r",
							"var req_age = Number(req_body.age);\r",
							"var req_salary = Number(req_body.salary);\r",
							"\r",
							"pm.test(\"Test request\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// console\r",
							"console.log(jsonData.family);\r",
							"\r",
							"// u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var resp_salary_1_5 = jsonData.family.u_salary_1_5_year;\r",
							"pm.test(\"Test:u_salary_1_5_year=salary*4\", function () {\r",
							"    pm.expect(resp_salary_1_5).to.eql(Number(req_salary)*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = Number(jsonData.age);\r",
							"var resp_name = jsonData.name;\r",
							"var resp_salary = jsonData.salary;\r",
							"\r",
							"// request\r",
							"var jsonReq = pm.request.url.query.toObject()\r",
							"var req_name = jsonReq.name;\r",
							"var req_age = Number(jsonReq.age);\r",
							"var req_salary = Number(jsonReq.salary);\r",
							"\r",
							"pm.test(\"Test request\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// console\r",
							"console.log(jsonData.family);\r",
							"\r",
							"// parameter\r",
							"let pets_dog = jsonData.family.pets.dog;\r",
							"\r",
							"pm.test(\"Parameter\", function () {\r",
							"    pm.expect(pets_dog).to.have.property(\"name\");\r",
							"    pm.expect(pets_dog).to.have.property(\"age\");\r",
							"});\r",
							" \r",
							"// parameter value \r",
							"\r",
							"pm.test(\"Params\", function () {\r",
							"    pm.expect(pets_dog.name).to.eql(\"Luky\");\r",
							"    pm.expect(pets_dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name=Olga&age=29&salary=1500",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"var resp_name = jsonData.name;\r",
							"var resp_salary = jsonData.salary[0];\r",
							"\r",
							"//request\r",
							"var jsonReq = pm.request.url.query.toObject()\r",
							"var req_name = jsonReq.name;\r",
							"var req_age = Number(jsonReq.age);\r",
							"var req_salary = Number(jsonReq.salary);\r",
							"// Test response=request (age, name)\r",
							"\r",
							"pm.test(\"Test response=request\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// console salary_response\r",
							"console.log(resp_salary)\r",
							"\r",
							"// console salary_request\r",
							"\r",
							" console.log(req_salary);\r",
							"\r",
							"// console salary [0], [1], [2]\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"console.log(jsonData.salary[1]);\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"// salary response = salary request multiply by coefficient\r",
							"var resp_salary_1 = Number(jsonData.salary[1]);\r",
							"var resp_salary_2 = Number(jsonData.salary[2]);\r",
							"pm.test(\"Test salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"    pm.expect(resp_salary_1).to.eql(req_salary*2);\r",
							"    pm.expect(resp_salary_2).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"//environment variable \r",
							"\r",
							"pm.environment.set(\"name\", resp_name); \r",
							"pm.environment.set(\"age\", resp_age);\r",
							"pm.environment.set(\"salary\", resp_salary);\r",
							"\r",
							"// cycle console \r",
							"let arr_salary = [jsonData.salary];\r",
							"\r",
							"for (key in arr_salary) {\r",
							"  console.log(arr_salary[key]);\r",
							"};\r",
							"// or\r",
							"var json_resp = JSON.parse(responseBody);\r",
							"var salary = json_resp.salary\r",
							"\r",
							" for (var i=0; i< salary.length; i++){   \r",
							"    console.log(\"salary\" + i + \": \" +salary[i])\r",
							"}\r",
							"// or\r",
							" for (let i of salary){\r",
							"     console.log(\"salary = \" + i)\r",
							" };\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Olga&age=29&salary=1500",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// response\r",
							"var jsonData = pm.response.json();\r",
							"//request\r",
							"var req_body = request.data;\r",
							"\r",
							"pm.test(\"Test parameter in request\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"//  respons matching request\r",
							"pm.test(\"Test respons matching request\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(Number(req_body.salary));\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql((req_body.salary)*2);\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql((req_body.salary)*2.7);\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql((req_body.salary)*3.3);\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql((req_body.salary)*3.8);\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(Number(req_body.salary));\r",
							"    pm.expect(jsonData.person.u_age).to.eql(Number(req_body.age));\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql((req_body.salary)*4.2);\r",
							"});\r",
							"\r",
							"// cycle console \r",
							"let arr_person = [jsonData.person];\r",
							"for (key in arr_person) {\r",
							"  console.log(arr_person[key]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}
